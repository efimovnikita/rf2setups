@page "/"
@page "/index"
@page "/setups"


<h2>Cars setups</h2>

<div style="margin-bottom: 1em;">
    <a href="/setups/add" class="btn btn-outline-success btn-sm"><span class="oi oi-plus"></span> Add setup</a>
</div>

@if (ShowFilters)
{
    <button type="button" class="btn btn-outline-secondary btn-sm mb-1" @onclick=@(()=>ShowFilters = !ShowFilters)>Filters <span class="oi oi-arrow-top"></span></button>        
    <FIlterComponent 
        OnClickFilter="OnClickFilter" 
        OnClickClearFilter="OnClickClearFilter"
        OnClickOrderByCar="OnClickOrderByCar"
        OnClickOrderByTrack="OnClickOrderByTrack">
    </FIlterComponent>
}else
{
    <button type="button" class="btn btn-outline-secondary btn-sm mb-1" @onclick=@(()=>ShowFilters = !ShowFilters)>Filters <span class="oi oi-arrow-bottom"></span></button>        
}

<hr />

<div class="setups-container">
    @if (Setups != null)
    {
        @if (Setups.Count != 0)
        {
                @foreach (var setup in Setups)
                {
                    var car = Data.Cars.Where(c => c.Id == setup.Car).FirstOrDefault();
                    var track = Data.Tracks.Where(t => t.Id == setup.Track).FirstOrDefault();
                    
                    <SetupComponent 
                        Id="@setup.Id"
                        Name="@setup.Name" 
                        CarName="@($"{car.Brand} {car.Model}")" 
                        TrackName="@(track.Name)"
                        ImgURL="@car.CarBrandImageURL"
                        Date="@setup.Date"
                        OnClickDeleteButton="@(() => DeleteSetupById(setup.Id))"
                    ></SetupComponent>
                }  
        }else
        {
            <p>Setup list is empty.</p>
        }
    }else{
        <div>
            <Spinner />
        </div>
    }
</div>

@code
{
    [CascadingParameter]
    public AppData Data { get; set; }
    public List<Setup> Setups { get; set; }
    public bool ShowFilters { get; set; } = false;
    private void DeleteSetupById(Guid id){
        Data.DeleteSetupById(id);
        this.StateHasChanged();
    }

    protected override void OnParametersSet() {
        if (Data.Setups != null)
        {
            Setups = Data.Setups.OrderByDescending(s => s.Date).ToList();
        }
    }

    private void OnClickFilter(string[] strArgs){
        var selectedCar = strArgs[0];
        var selectedTrack = strArgs[1];
        if (selectedCar != "Select car..." && selectedTrack != "Select track...")
        {
            var selectedTrackGuid = Data.Tracks.Where(t => t.Name == selectedTrack).Select(t => t.Id).FirstOrDefault();
            var selectedCarGuid = Data.Cars.Where(c => $"{c.Brand} {c.Model}" == selectedCar).Select(t => t.Id).FirstOrDefault();
            Setups = Data.Setups.Where(s => s.Track == selectedTrackGuid).Where(s => s.Car == selectedCarGuid).ToList();
        }else if (selectedCar != "Select car..." && selectedTrack == "Select track...")
        {
            var selectedCarGuid = Data.Cars.Where(c => $"{c.Brand} {c.Model}" == selectedCar).Select(t => t.Id).FirstOrDefault();
            Setups = Data.Setups.Where(s => s.Car == selectedCarGuid).ToList();
        }else if (selectedCar == "Select car..." && selectedTrack != "Select track...")
        {
            var selectedTrackGuid = Data.Tracks.Where(t => t.Name == selectedTrack).Select(t => t.Id).FirstOrDefault();
            Setups = Data.Setups.Where(s => s.Track == selectedTrackGuid).ToList();
        }else
        {
            Setups = Data.Setups;
        }
    }

    private void OnClickClearFilter(string[] strArgs){
        Setups = Data.Setups;
    }

    private void OnClickOrderByCar() {
        Setups = Setups.OrderBy(s => s.Car).ToList();
    }

    private void OnClickOrderByTrack() {
        Setups = Setups.OrderBy(s => s.Track).ToList();
    }
}