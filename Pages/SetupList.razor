@page "/"
@page "/index"
@page "/setups"

<div class="container">
    <h2>Cars setups</h2>

    @if (ShowFilters)
    {
        <button type="button" class="btn btn-outline-secondary btn-sm mb-1" @onclick=@(()=>ShowFilters = !ShowFilters)>Filters <span class="oi oi-arrow-top"></span></button>        
    }else
    {
        <button type="button" class="btn btn-outline-secondary btn-sm mb-1" @onclick=@(()=>ShowFilters = !ShowFilters)>Filters <span class="oi oi-arrow-bottom"></span></button>        
    }
    
    @if (Setups != null)
    {
        if (ShowFilters)
        {
            <div class="filter-container">
                <div class="filter-selects">
                    <div class="filter-select">
                        <label>Filter by track:</label>
                        <select class="custom-select" name="tracks" @bind="SelectedTrack">
                            <option value="Select track..." selected>Select track...</option>
                            @foreach (var name in Tracks)
                            {
                                <option value="@name">@name</option>
                            }
                        </select>   
                    </div>
                    <div class="filter-select">
                        <label>Filter by car:</label>
                        <select class="custom-select" name="cars" @bind="SelectedCar">
                            <option value="Select car..." selected>Select car...</option>
                            @foreach (var name in Cars)
                            {
                                <option value="@name">@name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="filter-buttons">
                    <button type="button" class="btn btn-dark" @onclick="OnClickFilter">Filter</button>
                    <button type="button" class="btn btn-secondary" @onclick="OnClickClearFilter">Clear</button>
                    <button type="button" class="btn btn-success" @onclick="OnClickOrderByTrack"><span class="oi oi-sort-ascending"></span> by track</button>
                    <button type="button" class="btn btn-success" @onclick="OnClickOrderByCar"><span class="oi oi-sort-ascending"></span> by car</button>
                </div>
            </div>            
        }

        <hr />

        @if (Setups.Count != 0)
        {
            
            <div class="setups-container">

                @foreach (var setup in Setups)
                {
                    var car = Data.Cars.Where(c => c.Id == setup.Car).FirstOrDefault();
                    var track = Data.Tracks.Where(t => t.Id == setup.Track).FirstOrDefault();
                    
                    <SetupComponent 
                        Id="@setup.Id"
                        Name="@setup.Name" 
                        CarName="@(car.Name)" 
                        TrackName="@(track.Name)"
                        ImgURL="@car.CarBrandImageURL"
                        Date="@setup.Date"
                        OnClickDeleteButton="@(() => DeleteSetupById(setup.Id))"
                    />
                }  

            </div>
        }else
        {
            <p>Setup list is empty.</p>
        }
    }else{
        <Spinner />
    }
</div>

@code
{
    [CascadingParameter]
    private AppData Data { get; set; }
    private List<Setup> Setups { get; set; }
    private List<string> Tracks {get; set;}
    private List<string> Cars {get; set;}
    public string SelectedTrack { get; set; } = "Select track...";
    public string SelectedCar { get; set; } = "Select car...";
    public bool ShowFilters { get; set; } = false;
    private void DeleteSetupById(Guid id){
        Data.DeleteSetupById(id);
        this.StateHasChanged();
    }

    protected override void OnParametersSet() {
        if (Data.Setups != null)
        {
            Setups = Data.Setups;
            Tracks = Data.Tracks.Select(t => t.Name).ToList();
            Cars = Data.Cars.Select(c => c.Name).ToList();
        }
    }

    private void OnClickFilter(){
        if (SelectedCar != "Select car..." && SelectedTrack != "Select track...")
        {
            var selectedTrackGuid = Data.Tracks.Where(t => t.Name == SelectedTrack).Select(t => t.Id).FirstOrDefault();
            var selectedCarGuid = Data.Cars.Where(c => c.Name == SelectedCar).Select(t => t.Id).FirstOrDefault();
            Setups = Data.Setups.Where(s => s.Track == selectedTrackGuid).Where(s => s.Car == selectedCarGuid).ToList();
        }else if (SelectedCar != "Select car..." && SelectedTrack == "Select track...")
        {
            var selectedCarGuid = Data.Cars.Where(c => c.Name == SelectedCar).Select(t => t.Id).FirstOrDefault();
            Setups = Data.Setups.Where(s => s.Car == selectedCarGuid).ToList();
        }else if (SelectedCar == "Select car..." && SelectedTrack != "Select track...")
        {
            var selectedTrackGuid = Data.Tracks.Where(t => t.Name == SelectedTrack).Select(t => t.Id).FirstOrDefault();
            Setups = Data.Setups.Where(s => s.Track == selectedTrackGuid).ToList();
        }else
        {
            Setups = Data.Setups;
        }
    }

    private void OnClickClearFilter(){
        Setups = Data.Setups;
        SelectedTrack = "Select track...";
        SelectedCar = "Select car...";
    }

    private void OnClickOrderByCar() {
        Setups = Setups.OrderBy(s => s.Car).ToList();
    }

    private void OnClickOrderByTrack() {
        Setups = Setups.OrderBy(s => s.Track).ToList();
    }
}