@page "/setups/add"
@using System
@inject NavigationManager NavigationManager
@using System.Net.Http
@inject HttpClient Http

<h2>Add setup</h2>

@if (Data.Setups != null)
{
    <EditForm Model="Setup" OnValidSubmit="Add">
        <DataAnnotationsValidator />

        <div style="margin-bottom: 1em;">
            <label class="text-secondary">Setup name:</label>
            <InputText class="form-control" @bind-Value="Setup.Name" />
            <ValidationMessage For="@(()=> Setup.Name)" />
        </div>

        <div style="margin-bottom: 1em;">
            <label class="text-secondary">Select car:</label>
            <InputSelect class="form-control" @bind-Value="SelectedCar">
                @for (int i = 0; i < Cars.Count; i++)
                {
                    if (i == 0)
                    {
                        <option selected>@Cars[i]</option>
                        continue;
                    }

                    <option>@Cars[i]</option>
                }
            </InputSelect>
        </div>

        <div style="margin-bottom: 1em;">
            <label class="text-secondary">Select track:</label>
            <InputSelect class="form-control" @bind-Value="SelectedTrack">
                @for (int i = 0; i < Tracks.Count; i++)
                {
                    if (i == 0)
                    {
                        <option selected>@Tracks[i]</option>
                        continue;
                    }

                    <option>@Tracks[i]</option>
                }
            </InputSelect>
        </div>

        <button class="btn btn-success btn-sm" type="submit"><span class="oi oi-plus"></span> Add setup</button>
    </EditForm>    
}else
{
    <Spinner></Spinner>
}

@code {
    [CascadingParameter]
    public AppData Data { get; set; }
    public Setup Setup { get; set; } = new Setup();
    public List<string> Cars { get; set; }
    public string SelectedCar { get; set; }
    public List<string> Tracks { get; set; }
    public string SelectedTrack { get; set; }

    protected override void OnParametersSet() {
        if (Data.Cars != null)
        {
            Cars = Data.Cars.Select(c => $"{c.Brand} {c.Model}").ToList();
            if (Cars.Count != 0)
                SelectedCar = Cars[0];
        }

        if (Data.Tracks != null)
        {
            Tracks = Data.Tracks.Select(t => t.Name).ToList();
            if (Tracks.Count != 0)
                SelectedTrack = Tracks[0];
        }
    }

    async Task Add() {
        Setup.Id = Guid.NewGuid();
        Setup.Date = DateTime.Now;
        Setup.Car = Data.Cars.Where(c => $"{c.Brand} {c.Model}" == SelectedCar).FirstOrDefault().Id;
        Setup.Track = Data.Tracks.Where(t => t.Name == SelectedTrack).FirstOrDefault().Id;

        var response = await Http.PostAsJsonAsync("https://us-central1-rf2setups.cloudfunctions.net/api/addsetup", Setup);
        if (response.IsSuccessStatusCode)
        {
            Data.Setups.Add(Setup);
            NavigationManager.NavigateTo("/setups");
        }else
        {
            System.Console.WriteLine("Request failed...");
        }
    }
}